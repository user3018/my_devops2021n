{
"issues": [
{
"engineId": "acc",
"ruleId": "platform",
"severity": "CRITICAL",
"type": "BUG",
"primaryLocation": {
"message": "Переменная не определена (Расчет)\n<<?>>Расчет.РассчитатьНачисления(Ссылка, Движения, ОсновныеНачисления, ДополнительныеНачисления);    (Проверка: Внешнее соединение (вариант клиент-сервер))",
"filePath": "D:/Anatoly/repo/devops2021n/src/cf/Documents/НачислениеЗарплаты/Ext/ObjectModule.bsl",
"textRange": {
"startLine": 97,
"endLine": 97,
"startColumn": 2,
"endColumn": 93
}
},
"effortMinutes": 0
},
{
"engineId": "acc",
"ruleId": "platform",
"severity": "CRITICAL",
"type": "BUG",
"primaryLocation": {
"message": "Переменная не определена (Расчет)\n<<?>>Расчет.РассчитатьНачисления(Ссылка, Движения, ОсновныеНачисления, ДополнительныеНачисления);    (Проверка: Толстый клиент (управляемое приложение, вариант клиент-сервер))",
"filePath": "D:/Anatoly/repo/devops2021n/src/cf/Documents/НачислениеЗарплаты/Ext/ObjectModule.bsl",
"textRange": {
"startLine": 97,
"endLine": 97,
"startColumn": 2,
"endColumn": 93
}
},
"effortMinutes": 0
},
{
"engineId": "acc",
"ruleId": "361 : Проверка заключения серверного кода в инструкцию препроцессора",
"severity": "CRITICAL",
"type": "BUG",
"primaryLocation": {
"message": "Серверный код не заключен в инструкцию препроцессора: \"#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда...\".\nСообщить(\"Тест\");  \nhttps://its.1c.ru/db/v8std#content:680:hdoc",
"filePath": "D:/Anatoly/repo/devops2021n/src/cf/Catalogs/Валюты/Ext/ObjectModule.bsl",
"textRange": {
"startLine": 1,
"endLine": 1,
"startColumn": 1,
"endColumn": 17
}
},
"effortMinutes": 0
},
{
"engineId": "acc",
"ruleId": "427 : Проверка области \"Инициализация\" в текстах модулей",
"severity": "CRITICAL",
"type": "BUG",
"primaryLocation": {
"message": "Отсутствует область \"Инициализация\" в тексте модуля.\nСообщить(\"Тест\");  \nhttps://its.1c.ru/db/v8std#content:455:hdoc",
"filePath": "D:/Anatoly/repo/devops2021n/src/cf/Catalogs/Валюты/Ext/ObjectModule.bsl",
"textRange": {
"startLine": 1,
"endLine": 1,
"startColumn": 1,
"endColumn": 17
}
},
"effortMinutes": 0
},
{
"engineId": "acc",
"ruleId": "239 : Структура стандартных областей",
"severity": "CRITICAL",
"type": "BUG",
"primaryLocation": {
"message": "В модуле должны быть определены стандартные области.  \nhttps://its.1c.ru/db/v8std#content:455:hdoc  \n",
"filePath": "D:/Anatoly/repo/devops2021n/src/cf/Catalogs/Валюты/Ext/ObjectModule.bsl"
},
"effortMinutes": 0
}
],
"rules": [
{
"engineId": "acc",
"ruleId": "361 : Проверка заключения серверного кода в инструкцию препроцессора",
"name": "Серверный код не заключен в инструкцию препроцессора: \"#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда...\" (361)",
"severity": "CRITICAL",
"description": "<HTML><HEAD><TITLE>Пример всех стилей</TITLE>\n<META content=ru http-equiv=Content-Language>\n<META content=\"text/html; charset=windows-1251\" http-equiv=Content-Type>\n<STYLE>H1 {\n\u0009FONT-SIZE: 18pt; FONT-FAMILY: Arial, Tahoma; FONT-WEIGHT: bold; COLOR: #003366; TEXT-ALIGN: left\n}\n.Programtext {\n\u0009FONT-SIZE: 10pt; FONT-FAMILY: Courier New; COLOR: #000080\n}\nH2 {\n\u0009FONT-SIZE: 14pt; FONT-FAMILY: Arial, Tahoma; FONT-WEIGHT: bold; TEXT-ALIGN: left\n}\nH3 {\n\u0009FONT-SIZE: 12pt; FONT-FAMILY: Arial, Tahoma; FONT-WEIGHT: bold; TEXT-ALIGN: left\n}\n.table {\n\u0009FONT-SIZE: 90%\n}\nBODY {\n\u0009FONT-SIZE: 80%; FONT-FAMILY: Verdana\n}\nTD {\n\u0009FONT-SIZE: 80%\n}\n.tip {\n\u0009BORDER-LEFT-WIDTH: 0px; BORDER-RIGHT-WIDTH: 0px; WIDTH: 95%; BORDER-BOTTOM-WIDTH: 0px; PADDING-BOTTOM: 15px; PADDING-TOP: 15px; PADDING-LEFT: 15px; PADDING-RIGHT: 15px; BORDER-TOP-WIDTH: 0px; BACKGROUND-COLOR: #ccffcc\n}\n.tip TD {\n\u0009BORDER-LEFT-WIDTH: 0px; BORDER-RIGHT-WIDTH: 0px; WIDTH: 95%; BORDER-BOTTOM-WIDTH: 0px; PADDING-BOTTOM: 15px; PADDING-TOP: 15px; PADDING-LEFT: 15px; PADDING-RIGHT: 15px; BORDER-TOP-WIDTH: 0px; BACKGROUND-COLOR: #ccffcc\n}\n.important {\n\u0009BORDER-LEFT-WIDTH: 0px; BORDER-RIGHT-WIDTH: 0px; WIDTH: 95%; BORDER-BOTTOM-WIDTH: 0px; PADDING-BOTTOM: 15px; PADDING-TOP: 15px; PADDING-LEFT: 15px; PADDING-RIGHT: 15px; BORDER-TOP-WIDTH: 0px; BACKGROUND-COLOR: #ffeeee\n}\n.important TD {\n\u0009BORDER-LEFT-WIDTH: 0px; BORDER-RIGHT-WIDTH: 0px; WIDTH: 95%; BORDER-BOTTOM-WIDTH: 0px; PADDING-BOTTOM: 15px; PADDING-TOP: 15px; PADDING-LEFT: 15px; PADDING-RIGHT: 15px; BORDER-TOP-WIDTH: 0px; BACKGROUND-COLOR: #ffeeee\n}\n.note {\n\u0009BORDER-LEFT-WIDTH: 0px; BORDER-RIGHT-WIDTH: 0px; WIDTH: 95%; BORDER-BOTTOM-WIDTH: 0px; PADDING-BOTTOM: 15px; PADDING-TOP: 15px; PADDING-LEFT: 15px; PADDING-RIGHT: 15px; BORDER-TOP-WIDTH: 0px; BACKGROUND-COLOR: #eeeeff\n}\n.note TD {\n\u0009BORDER-LEFT-WIDTH: 0px; BORDER-RIGHT-WIDTH: 0px; WIDTH: 95%; BORDER-BOTTOM-WIDTH: 0px; PADDING-BOTTOM: 15px; PADDING-TOP: 15px; PADDING-LEFT: 15px; PADDING-RIGHT: 15px; BORDER-TOP-WIDTH: 0px; BACKGROUND-COLOR: #eeeeff\n}\n</STYLE>\n\n<META name=GENERATOR content=\"MSHTML 11.00.10570.1001\"></HEAD>\n<BODY>\n<H1>Поддержка толстого клиента, управляемое приложение, клиент-сервер</H1><DIV style=\"clear: right; float: right;\"><a href=\"https://its.1c.ru/db/v8std#content:456:hdoc:1\">#std</a>680</DIV><BLOCKQUOTE style=\"MARGIN-RIGHT: 0px\" dir=ltr><P><EM>Область применения: управляемое приложение, обычное приложение.</EM></P></BLOCKQUOTE>\n<P><a name=\"1\" id=\"1\"></a>1. В управляемом режиме из-за ряда ограничений тонкого клиента может возникнуть необходимость поддержки запуска толстого клиента (в режиме управляемого приложения). Подробнее см. <A href=\"http://its.1c.ru/db/metod81#content:3266:1\" target=_blank>Функциональность обычного приложения, отсутствующая в управляемом приложении</A>.</P>\n<P><a name=\"2\" id=\"2\"></a>2. При этом разработка конфигураций, рассчитанных на режим управляемого приложения, как правило, ведется исходя из того, что в клиент-серверной архитектуре код следующих модулей компилируется и выполняется только на сервере</P>\n<UL>\n<LI>модуль менеджера; \n<LI>модуль объекта; \n<LI>модуль сеанса.</LI></UL>\n<P>В частности, в указанных модулях может встречаться обращение к общим модулям, доступным только на сервере.</P>\n<P>Однако в толстом клиенте, в режиме управляемого приложения, клиент-сервер, возможны ситуации, когда указанные модули могут начать компилироваться и выполняться на стороне клиента, в частности:</P>\n<UL>\n<LI>если объект (справочник, документ и т.п.) явно создается и вызывается в клиентском коде; \n<LI>когда платформа 1С:Предприятие неявно обращается к модулям менеджеров и модулю сеанса для вызова их обработчиков событий на клиенте.</LI></UL>\n<P>Компиляция и выполнение таких модулей на клиенте могут приводить к ошибкам. По этой причине режим проверки конфигурации для режима толстый клиент, управляемое приложение, может находить ошибки в указанных модулях.</P>\n<P>Для того чтобы избежать незапланированной компиляции и исполнения указанных модулей на клиенте, а также чтобы избежать лишних сообщений режима проверки конфигурации, следует:</P>\n<UL>\n<LI>\n<DIV>полностью исключить из клиентского контекста код модулей объектов (наборов записей и т.п.), заключив его в инструкцию препроцессора и дополнив вызовом исключения, которое предотвращает несанкционированную попытку использования объекта на клиенте:</DIV></LI></UL>\n<BLOCKQUOTE style=\"MARGIN-RIGHT: 0px\" dir=ltr>\n<P class=Programtext>#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда<BR>&nbsp; …<BR>#Иначе<BR>&nbsp; ВызватьИсключение НСтр(\"ru = 'Недопустимый вызов объекта на клиенте.'\");<BR>#КонецЕсли<BR></P></BLOCKQUOTE>\n<UL>\n<LI>полностью исключить из клиентского контекста код модуля сеанса, заключив его в инструкцию препроцессора (так как параметры сеанса требуются для работы серверного, а не клиентского кода конфигурации):</LI></UL>\n<BLOCKQUOTE style=\"MARGIN-RIGHT: 0px\" dir=ltr>\n<P class=Programtext>#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда<BR>&nbsp; …<BR>#КонецЕсли<BR></P></BLOCKQUOTE>\n<UL dir=ltr>\n<LI>\n<DIV>полностью исключить из клиентского контекста код модулей менеджеров всех видов объектов метаданных, заключив его в инструкцию препроцессора:</DIV></LI></UL>\n<BLOCKQUOTE style=\"MARGIN-RIGHT: 0px\" dir=ltr>\n<P class=Programtext>#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда<BR>…<BR>#КонецЕсли<BR></P></BLOCKQUOTE>\n<P>В последнем случае также будет действовать следующее ограничение: если представление объектов формируется <A href=\"i8100746.htm\">обработчиками событий модуля менеджера <STRONG>ОбработкаПолученияПредставления</STRONG> и <STRONG>ОбработкаПолученияПолейПредставления</STRONG></A>, то в толстом клиенте, в режиме управляемого приложения, клиент-сервер, представление будет формироваться по умолчанию, без вызова этих обработчиков, и тем самым будет отличаться от остальных режимов работы. (При этом оставшиеся два обработчика модуля менеджера <STRONG>ОбработкаПолученияДанныхВыбора</STRONG> и <STRONG>ОбработкаПолученияФормы</STRONG> вызываются всегда только на сервере, поэтому указанное ограничение на них не распространяется.)</P>\n<TABLE class=tip>\n<TBODY>\n<TR>\n<TD>\n<P align=right><EM>Методическая рекомендация (полезный совет)</EM></P>\n<P><a name=\"3\" id=\"3\"></a>3. В тех случаях, когда требуется снять указанное выше ограничение, необходимо дополнительно обеспечить работу на клиенте следующих фрагментов серверного кода:</P>\n<UL>\n<LI>обработчиков событий модулей менеджеров <STRONG>ОбработкаПолученияПредставления</STRONG> и <STRONG>ОбработкаПолученияПолейПредставления</STRONG> \n<LI>а также код подписок на эти события модулей менеджеров.</LI></UL>\n<P>Для этого код перечисленных обработчиков событий следует вынести за инструкции препроцессора, указанные в п.2, а обработчики подписок разместить в клиент-серверных модулях. </P>\n<P>При необходимости вызова серверных процедур (и функций) из клиентского кода следует размещать вызываемые процедуры в <A href=\"i8100469.htm\">серверных общих модулях с признаком <STRONG>Вызов сервера</STRONG></A>. При этом нужно убедиться, что в параметры процедур (и в возвращаемые значения функций) не передаются значения мутабельных типов (<STRONG>СправочникОбъект</STRONG>, <STRONG>ДокументОбъект</STRONG> и пр.)</P>\n<P>Важно: не следует для этих целей всем общим модулям с признаком <STRONG>Сервер</STRONG> принудительно устанавливать флажок <STRONG>Вызов сервера</STRONG>. Подробнее см. <A href=\"i8100679.htm\">Ограничение на установку признака «Вызов сервера» у общих модулей</A>.</P>\n<P>Например, обработчик события <STRONG>ОбработкаПолученияПредставления</STRONG> вызывает общий модуль, который не доступен на клиенте:</P>\n<P class=Programtext>Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)<BR>&nbsp;<BR>&nbsp; Взаимодействия.ОбработкаПолученияПредставления(Данные, Представление);<BR>&nbsp; СтандартнаяОбработка = Ложь;<BR>&nbsp;<BR>КонецПроцедуры</FONT></P>\n<P>правильно выполнить переход на сервер (и при этом не передавать на клиент значения мутабельных типов):</FONT></P>\n<P class=Programtext>Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)<BR><BR>&nbsp; ВзаимодействияВызовСервера.ОбработкаПолученияПредставления(Данные, Представление);<BR>&nbsp; СтандартнаяОбработка = Ложь;</FONT></P>\n<P class=Programtext>КонецПроцедуры</P></TD></TR></TBODY></TABLE>\n<P class=tip>4. Для расстановки фрагментов кода с инструкциями препроцессора можно воспользоваться <A href=\"EXE/АвтоформатированиеКодаИЛокализация.epf\">приложенной обработкой</A>.</P></BODY></HTML>",
"type": "BUG"
},
{
"engineId": "acc",
"ruleId": "427 : Проверка области \"Инициализация\" в текстах модулей",
"name": "Отсутствует область \"Инициализация\" в тексте модуля (427)",
"severity": "CRITICAL",
"description": "<html><head><title>Структура модуля</title>\n<style>H1 {\n\u0009FONT-SIZE: 18pt; FONT-FAMILY: Arial, Tahoma; FONT-WEIGHT: bold; COLOR: #003366; TEXT-ALIGN: left\n}\n.Programtext {\n\u0009FONT-SIZE: 10pt; FONT-FAMILY: Courier New; COLOR: #000080\n}\nH2 {\n\u0009FONT-SIZE: 14pt; FONT-FAMILY: Arial, Tahoma; FONT-WEIGHT: bold; TEXT-ALIGN: left\n}\nH3 {\n\u0009FONT-SIZE: 12pt; FONT-FAMILY: Arial, Tahoma; FONT-WEIGHT: bold; TEXT-ALIGN: left\n}\n.table {\n\u0009FONT-SIZE: 90%\n}\nBODY {\n\u0009FONT-SIZE: 80%; FONT-FAMILY: Verdana\n}\nTD {\n\u0009FONT-SIZE: 80%\n}\n.tip {\n\u0009BORDER-LEFT-WIDTH: 0px; BORDER-RIGHT-WIDTH: 0px; WIDTH: 95%; BORDER-BOTTOM-WIDTH: 0px; PADDING-BOTTOM: 15px; PADDING-TOP: 15px; PADDING-LEFT: 15px; PADDING-RIGHT: 15px; BORDER-TOP-WIDTH: 0px; BACKGROUND-COLOR: #ccffcc\n}\n.tip TD {\n\u0009BORDER-LEFT-WIDTH: 0px; BORDER-RIGHT-WIDTH: 0px; WIDTH: 95%; BORDER-BOTTOM-WIDTH: 0px; PADDING-BOTTOM: 15px; PADDING-TOP: 15px; PADDING-LEFT: 15px; PADDING-RIGHT: 15px; BORDER-TOP-WIDTH: 0px; BACKGROUND-COLOR: #ccffcc\n}\n</style>\n\n<meta content=\"text/html; charset=windows-1251\" http-equiv=\"Content-Type\">\n<meta name=\"GENERATOR\" content=\"MSHTML 11.00.10570.1001\"></head>\n<body>\n<h1>Структура модуля</h1><div style=\"clear: right; float: right;\"><a href=\"https://its.1c.ru/db/v8std#content:456:hdoc:1\">#std</a>455</div><blockquote style=\"MARGIN-RIGHT: 0px\" dir=\"ltr\"><p><em>Область применения: управляемое приложение, мобильное приложение, обычное приложение.</em></p></blockquote>\n<p><a name=\"1.1\" id=\"1.1\"></a>1.1. В программном модуле (общие модули, модули объектов, модули менеджеров объектов, модули форм, команд и т.п.) в общем случае могут присутствовать следующие разделы в приведенной ниже последовательности:</p>\n<ul>\n<li>заголовок модуля \n</li><li>раздел описания переменных \n</li><li>экспортные процедуры и функции модуля, составляющие его программный интерфейс \n</li><li>обработчики событий объекта (формы) \n</li><li>служебные процедуры и функции модуля \n</li><li>раздел инициализации </li></ul>\n<p>Некоторые разделы могут присутствовать только в модулях определенного вида. Например, обработчики событий элементов форм могут присутствовать только в модулях форм, а раздел описания переменных и раздел инициализации не могут быть определены в неглобальных общих модулях, модулях менеджеров объектов, наборов записей, значений констант и модуле сеанса.</p>\n<p>Требование о разделении кода модуля на разделы&nbsp;призвано&nbsp;повысить читаемость&nbsp;кода и упростить внесение изменений в код разными авторами (разработчиками) как при коллективной разработке, так и при доработке прикладных решений на конкретных внедрениях.</p>\n<p><a name=\"1.2\" id=\"1.2\"></a>1.2. Объемные разделы модулей рекомендуется разбивать на подразделы по функциональному признаку.</p>\n<p><a name=\"1.3\" id=\"1.3\"></a>1.3. Разделы и подразделы оформляются в виде областей. При этом имена областей должны удовлетворять требованиям стандарта <a href=\"i8100454.htm\">Правила образования имен переменных</a></p>\n<p><a name=\"1.4\" id=\"1.4\"></a>1.4. Шаблон (заготовка для копирования) разделов для общих модулей:</p>\n<p class=\"Programtext\"><strong>русск.</strong></p><pre class=\"Programtext\">#Область ПрограммныйИнтерфейс\n// Код процедур и функций\n#КонецОбласти\n\n#Область СлужебныйПрограммныйИнтерфейс\n// Код процедур и функций\n#КонецОбласти\n\n#Область СлужебныеПроцедурыИФункции\n// Код процедур и функций\n#КонецОбласти\n</pre>\n<p class=\"Programtext\"><strong>англ.</strong></p><pre class=\"Programtext\">#Region Public\n// Enter code here.\n#EndRegion\n\n#Region Internal\n// Enter code here.\n#EndRegion\n\n#Region Private\n// Enter code here.\n#EndRegion\n</pre>\n<ul>\n<li>Раздел <strong>«Программный интерфейс»</strong> содержит экспортные процедуры и функции, предназначенные для использования другими&nbsp;объектами конфигурации или другими программами (например, через внешнее соединение). \n</li><li>Раздел «<strong>Служебный программный интерфейс</strong>»&nbsp; предназначен для модулей, которые являются частью некоторой функциональной подсистемы. В нем должны быть размещены экспортные процедуры и функции, которые допустимо вызывать только из других функциональных подсистем этой же библиотеки. \n</li><li>Раздел <strong>«Служебные процедуры и функции»</strong> содержит процедуры и функции, составляющие внутреннюю реализацию общего модуля.&nbsp;В тех случаях, когда общий модуль является частью некоторой <a href=\"i8100543.htm\">функциональной подсистемы</a>, включающей в себя несколько объектов метаданных, в этом разделе также могут быть размещены служебные экспортные&nbsp;процедуры и функции, предназначенные&nbsp;только для вызова из других объектов данной подсистемы. <br><br>Для объемных общих модулей рекомендуется разбивать этот раздел на подразделы, по функциональному признаку.&nbsp;Например:&nbsp;</li></ul>\n<p class=\"Programtext\"><strong>русск.</strong></p><pre class=\"Programtext\">#Область ОбновлениеИнформационнойБазы\n// Код процедур и функций\n#КонецОбласти\n</pre>\n<p class=\"Programtext\"><strong>англ.</strong></p><pre class=\"Programtext\">#Region InfobaseUpdate\n// Enter code here.\n#EndRegion\n</pre>\n<p><a name=\"1.5\" id=\"1.5\"></a>1.5. Шаблон оформления разделов для модулей объектов, менеджеров, наборов записей, обработок, отчетов и т.п.:</p>\n<p class=\"Programtext\"><strong>русск.</strong></p><pre class=\"Programtext\">#Область ОписаниеПеременных\n\n#КонецОбласти\n\n#Область ПрограммныйИнтерфейс\n// Код процедур и функций\n#КонецОбласти\n\n#Область ОбработчикиСобытий\n// Код процедур и функций\n#КонецОбласти\n\n#Область СлужебныйПрограммныйИнтерфейс\n// Код процедур и функций\n#КонецОбласти\n\n#Область СлужебныеПроцедурыИФункции\n// Код процедур и функций\n#КонецОбласти\n\n#Область Инициализация\n\n#КонецОбласти</pre>\n<p class=\"Programtext\"><strong>англ.</strong></p><pre class=\"Programtext\">#Region Variables\n\n#EndRegion\n\n#Region Public\n// Enter code here.\n#EndRegion\n\n#Region EventHandlers\n// Enter code here.\n#EndRegion\n\n#Region Internal\n// Enter code here.\n#EndRegion\n\n#Region Private\n// Enter code here.\n#EndRegion\n\n#Region Initialize\n\n#EndRegion\n</pre>\n<ul>\n<li>Раздел <strong>«Программный интерфейс»</strong> содержит экспортные процедуры и функции, предназначенные для использования в других модулях&nbsp;конфигурации или другими программами (например, через внешнее соединение). Не следует в этот раздел помещать экспортные функции и процедуры, которые предназначены для вызова исключительно из модулей самого объекта, его форм и команд. Например, процедуры заполнения табличной части документа, которые вызываются из обработки заполнения в модуле объекта и из формы документа в обработчике команды формы не являются программным интерфейсом модуля объекта, т.к. вызываются только в самом модуле и из форм этого же объекта. Их следует размещать в разделе «Служебные процедуры и функции». \n</li><li>Раздел <strong>«Обработчики событий»</strong> содержит обработчики событий модуля объекта (<strong>ПриЗаписи</strong>, <strong>ПриПроведении</strong> и др.) \n</li><li>Раздел «<strong>Служебный программный интерфейс</strong>» имеет такое же предназначение, как и в общих модулях. \n</li><li>Раздел <strong>«Служебные процедуры и функции»</strong> имеет такое же предназначение, как и в общих модулях.</li></ul>\n<p><a name=\"1.6\" id=\"1.6\"></a>1.6. Шаблон оформления разделов для модулей форм:</p>\n<p class=\"Programtext\"><strong>русск.</strong></p><pre class=\"Programtext\">#Область ОписаниеПеременных\n\n#КонецОбласти\n\n#Область ОбработчикиСобытийФормы\n// Код процедур и функций\n#КонецОбласти\n\n#Область ОбработчикиСобытийЭлементовШапкиФормы\n// Код процедур и функций\n#КонецОбласти\n\n#Область ОбработчикиСобытийЭлементовТаблицыФормы&lt;ИмяТаблицыФормы&gt;\n// Код процедур и функций\n#КонецОбласти\n\n#Область ОбработчикиКомандФормы\n// Код процедур и функций\n#КонецОбласти\n\n#Область СлужебныеПроцедурыИФункции\n// Код процедур и функций\n#КонецОбласти\n</pre>\n<p class=\"Programtext\"><strong>англ.</strong></p><pre class=\"Programtext\">#Region Variables\n\n#EndRegion\n\n#Region FormEventHandlers\n// Enter code here.\n#EndRegion\n\n#Region FormHeaderItemsEventHandlers\n// Enter code here.\n#EndRegion\n\n#Region <tablename>FormTableItemsEventHandlers\n// Enter code here.\n#EndRegion\n\n#Region FormCommandsEventHandlers\n// Enter code here.\n#EndRegion\n\n#Region Private\n// Enter code here.\n#EndRegion\n</tablename></pre>\n<ul>\n<li>Раздел <strong>«Обработчики событий формы»</strong> содержит процедуры-обработчики событий формы: <strong>ПриСозданииНаСервере</strong>, <strong>ПриОткрытии</strong> и т.п. \n</li><li>Раздел <strong>«Обработчики событий элементов шапки формы»</strong> содержит процедуры-обработчики элементов, расположенных в основной части формы (все, что не связано с таблицами на форме). \n</li><li>В разделах <strong>«Обработчики событий элементов таблицы формы &lt;имя таблицы формы&gt;»</strong> размещаются процедуры-обработчики таблиц формы и элементов таблиц. Для процедур-обработчиков каждой таблицы должен быть создан свой раздел. \n</li><li>Раздел <strong>«Обработчики команд формы»</strong> содержит процедуры-обработчики команд формы (имена которых задаются в свойстве Действие команд формы). \n</li><li>Раздел <strong>«Служебные процедуры и функции»</strong> имеет такое же предназначение, что и в общих модулях. </li></ul>\n<blockquote style=\"MARGIN-RIGHT: 0px\" dir=\"ltr\">\n<p><em>См. также: <a href=\"i8100630.htm\">Правила создания модулей форм</a><br></em></p></blockquote>\n<p><a name=\"1.7\" id=\"1.7\"></a>1.7. Шаблон оформления разделов для модулей команд:</p>\n<p class=\"Programtext\"><strong>русск.</strong></p><pre class=\"Programtext\">#Область ОбработчикиСобытий\n// Код процедур и функций\n#КонецОбласти\n\n#Область СлужебныеПроцедурыИФункции\n// Код процедур и функций\n#КонецОбласти\n</pre>\n<p class=\"Programtext\"><strong>англ.</strong></p><pre class=\"Programtext\">#Region EventHandlers\n// Enter code here.\n#EndRegion\n\n#Region Private\n// Enter code here.\n#EndRegion\n</pre>\n<p class=\"Programtext\"><br></p>\n<ul>\n<li>Раздел <strong>«Обработчики событий»</strong> содержит процедуру-обработчик команды <strong>ОбработкаКоманды</strong>. \n</li><li>Раздел <strong>«Служебные процедуры и функции»</strong> имеет такое же предназначение, что и в общих модулях. </li></ul>\n<p><a name=\"1.8\" id=\"1.8\"></a>1.8. В модуле не должно быть пустых областей.</p>\n<p><a name=\"2\" id=\"2\"></a>2. Общие требования к разделам программных модулей.</p>\n<p><a name=\"2.1\" id=\"2.1\"></a>2.1. <strong>Заголовок модуля</strong> представляет собой комментарий в самом начале модуля. В заголовке модуля приводится его краткое описание и условия применения. <br>Например: </p><pre class=\"Programtext\">////////////////////////////////////////////////////////////////////////////////\n// Клиентские процедуры и функции общего назначения:\n// - для работы со списками в формах;\n// - для работы с журналом регистрации;\n// - для обработки действий пользователя в процессе редактирования\n//   многострочного текста, например комментария в документах;\n// - прочее.\n//  \n////////////////////////////////////////////////////////////////////////////////\n</pre>\n<p>Для модулей форм в заголовке рекомендуется размещать описание параметров формы.</p>\n<p><a name=\"2.2\" id=\"2.2\"></a>2.2. <strong>Раздел описания переменных</strong>. Имена переменных назначаются согласно <a href=\"i8100454.htm\">общим правилам образования имен переменных</a>, а их использование описывается в статье <a href=\"i8100639.htm\">Использование глобальных переменных в программных модулях</a>.</p>\n<p>Все переменные модуля должны быть снабжены комментарием, достаточным для понимания их назначения. Комментарий рекомендуется размещать в той же строке, где объявляется переменная. <br>Пример:</p>\n<p class=\"Programtext\"><strong>русск.</strong></p><pre class=\"Programtext\">#Область ОписаниеПеременных\n\nПерем ВалютаУчета;\nПерем АдресПоддержки;\n...\n\n#КонецОбласти\n</pre>\n<p class=\"Programtext\"><strong>англ.</strong></p><pre class=\"Programtext\">#Region Variables\n\nVar PresentationCurrency;\nVar SupportEmail;\n...\n\n#EndRegion\n</pre>\n<p><a name=\"2.3\" id=\"2.3\"></a>2.3. <strong>Программный интерфейс</strong>. Экспортные процедуры и функции, составляющие программный интерфейс модуля, размещаются сразу же после описания переменных. Такие процедуры и функции&nbsp;предназначены для использования другими&nbsp;объектами конфигурации или другими программами (например, через внешнее соединение), поэтому должны быть расположены в модуле на \"видном месте\". </p>\n<blockquote style=\"MARGIN-RIGHT: 0px\" dir=\"ltr\">\n<p><em>См. также: <a href=\"i8100453.htm\">Описание процедур и функций</a></em></p></blockquote>\n<p><a name=\"2.4.1\" id=\"2.4.1\"></a>2.4.1. <strong>Обработчики событий формы, команд и элементов формы</strong>. Перед&nbsp;служебными процедурами и функциями в модуле формы располагаются обработчики событий формы, а также обработчики событий команд и элементов формы. </p>\n<table class=\"tip\">\n<tbody>\n<tr>\n<td>\n<p align=\"right\"><em>Методическая рекомендация (полезный совет)</em></p>\n<p><a name=\"2.4.2\" id=\"2.4.2\"></a>2.4.2. Рекомендуется обработчики одного элемента формы располагать вместе, придерживаясь, при этом, порядка их следования в панели свойств редактора формы в конфигураторе.</p>\n<p><a name=\"2.4.3\" id=\"2.4.3\"></a>2.4.3. У каждого события должна быть назначена своя процедура-обработчик. Если одинаковые действия должны выполняться при возникновении событий в разных элементах формы следует:</p>\n<ul>\n<li>\n<div>создать отдельную процедуру (функцию), выполняющую необходимые действия</div>\n</li><li>\n<div>для каждого элемента формы создать отдельный обработчик с именем, назначаемым по умолчанию</div>\n</li><li>\n<div>из каждого обработчика вызвать требуемую процедуру (функцию).</div></li></ul>\n<p>Например, неправильно:</p><pre class=\"Programtext\">&amp;НаКлиенте\nПроцедура ПоИсполнителюПриИзменении(Элемент)\n ПараметрыОтбора = Новый Соответствие();\n ПараметрыОтбора.Вставить(\"ПоАвтору\", ПоАвтору);\n ПараметрыОтбора.Вставить(\"ПоИсполнителю\", ПоИсполнителю);\n УстановитьОтборСписка(Список, ПараметрыОтбора);\nКонецПроцедуры\n\n&amp;НаКлиенте\nПроцедура ПоАвторуПриИзменении(Элемент)\n ПоИсполнителюПриИзменении(Неопределено);\nКонецПроцедуры\n</pre>\n<p>правильно:</p><pre class=\"Programtext\">&amp;НаКлиенте\nПроцедура ПоИсполнителюПриИзменении(Элемент)\n УстановитьОтбор();\nКонецПроцедуры\n\n&amp;НаКлиенте\nПроцедура ПоАвторуПриИзменении(Элемент)\n УстановитьОтбор();\nКонецПроцедуры\n\n&amp;НаСервере\nПроцедура УстановитьОтбор()\n ПараметрыОтбора = Новый Соответствие();\n ПараметрыОтбора.Вставить(\"ПоАвтору\", ПоАвтору);\n ПараметрыОтбора.Вставить(\"ПоИсполнителю\", ПоИсполнителю);\n УстановитьОтборСписка(Список, ПараметрыОтбора);\nКонецПроцедуры \n</pre>\n<p>Это требование обусловлено тем, что логически процедуры-обработчики событий не предназначены для использования в коде модуля, а вызываются непосредственно платформой. Смешение же этих двух сценариев в одной процедуре неоправданно усложняет ее логику и снижает ее устойчивость (вместо одного предусмотренного сценария вызова&nbsp;- по событию из платформы -&nbsp;код процедуры должен рассчитывать и на другие \"прямые\" вызовы из кода).</p></td></tr></tbody></table>\n<p><a name=\"2.5\" id=\"2.5\"></a>2.5. <strong>Обработчики событий модулей объекта и менеджера объекта </strong>размещаются после раздела с программным интерфейсом, но до служебных процедур и функций модуля.<strong> </strong>&nbsp; \n<table class=\"tip\">\n<tbody>\n<tr>\n<td>\n<p align=\"right\"><em>Методическая рекомендация (полезный совет)</em></p>\n<p><a name=\"2.5.1\" id=\"2.5.1\"></a>2.5.1. Рекомендуется располагать обработчики, придерживаясь порядка их следования в описании встроенного языка.</p></td></tr></tbody></table>\n</p><p><a name=\"2.6\" id=\"2.6\"></a>2.6. <strong>Служебные процедуры и функции модуля</strong>, которые не являются обработчиками событий, а составляют внутреннюю реализацию модуля, размещаются в модуле следом за обработчиками событий. </p>\n<p>В тех случаях когда общий модуль является частью некоторой функциональной подсистемы, включающей в себя несколько объектов метаданных, в этом разделе также могут быть размещены служебные экспортные&nbsp;процедуры и функции, предназначенные&nbsp;только для вызова из других объектов данной подсистемы.</p>\n<p>Процедуры и функции, связанные между собой по характеру или по логике работы рекомендуется располагать вместе. В модулях форм не рекомендуется явно группировать процедуры и функции модуля на серверные, клиентские и функции без контекста, так как такое «технологическое» упорядочивание затрудняет понимание логики модуля, отвлекая внимание разработчика на детали ее реализации. </p>\n<p><a name=\"2.7\" id=\"2.7\"></a>2.7. <strong>Раздел инициализации</strong> содержит операторы, инициализирующие переменные модуля или объект (форму). <br>Например:</p>\n<p class=\"Programtext\"><span style=\"FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; COLOR: navy; LINE-HEIGHT: 115%; mso-fareast-font-family: 'Times New Roman'; mso-ansi-language: RU; mso-fareast-language: RU; mso-bidi-language: AR-SA\"><strong>русск.</strong></span></p><span style=\"FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; COLOR: navy; LINE-HEIGHT: 115%; mso-fareast-font-family: 'Times New Roman'; mso-ansi-language: RU; mso-fareast-language: RU; mso-bidi-language: AR-SA\"><pre class=\"Programtext\">#Область Инициализация\n\nАдресПоддержки = \"v8@1c.ru\"; \nВыполнитьИнициализацию();\n...\n\n#КонецОбласти</pre>\n<p class=\"Programtext\"><strong>англ.</strong></p><pre class=\"Programtext\">#Region Initialize\n\nSupportEmail = \"v8@1c.ru\";\nCtor();\n...\n\n#EndRegion\n</pre>\n<p class=\"Programtext\"><br></p>\n<p class=\"tip\">Для оформления разделов кода в виде областей рекомендуется воспользоваться <a href=\"КонвертацияМодулейДляИспользованияОбластей.epf\">приложенной обработкой</a>.</p></span></body></html>",
"type": "BUG"
},
{
"engineId": "acc",
"ruleId": "239 : Структура стандартных областей",
"name": "В модуле должны быть определены стандартные области (239)",
"severity": "CRITICAL",
"description": "<html><head><title>Структура модуля</title>\n<style>H1 {\n\u0009FONT-SIZE: 18pt; FONT-FAMILY: Arial, Tahoma; FONT-WEIGHT: bold; COLOR: #003366; TEXT-ALIGN: left\n}\n.Programtext {\n\u0009FONT-SIZE: 10pt; FONT-FAMILY: Courier New; COLOR: #000080\n}\nH2 {\n\u0009FONT-SIZE: 14pt; FONT-FAMILY: Arial, Tahoma; FONT-WEIGHT: bold; TEXT-ALIGN: left\n}\nH3 {\n\u0009FONT-SIZE: 12pt; FONT-FAMILY: Arial, Tahoma; FONT-WEIGHT: bold; TEXT-ALIGN: left\n}\n.table {\n\u0009FONT-SIZE: 90%\n}\nBODY {\n\u0009FONT-SIZE: 80%; FONT-FAMILY: Verdana\n}\nTD {\n\u0009FONT-SIZE: 80%\n}\n.tip {\n\u0009BORDER-LEFT-WIDTH: 0px; BORDER-RIGHT-WIDTH: 0px; WIDTH: 95%; BORDER-BOTTOM-WIDTH: 0px; PADDING-BOTTOM: 15px; PADDING-TOP: 15px; PADDING-LEFT: 15px; PADDING-RIGHT: 15px; BORDER-TOP-WIDTH: 0px; BACKGROUND-COLOR: #ccffcc\n}\n.tip TD {\n\u0009BORDER-LEFT-WIDTH: 0px; BORDER-RIGHT-WIDTH: 0px; WIDTH: 95%; BORDER-BOTTOM-WIDTH: 0px; PADDING-BOTTOM: 15px; PADDING-TOP: 15px; PADDING-LEFT: 15px; PADDING-RIGHT: 15px; BORDER-TOP-WIDTH: 0px; BACKGROUND-COLOR: #ccffcc\n}\n</style>\n\n<meta content=\"text/html; charset=windows-1251\" http-equiv=\"Content-Type\">\n<meta name=\"GENERATOR\" content=\"MSHTML 11.00.10570.1001\"></head>\n<body>\n<h1>Структура модуля</h1><div style=\"clear: right; float: right;\"><a href=\"https://its.1c.ru/db/v8std#content:456:hdoc:1\">#std</a>455</div><blockquote style=\"MARGIN-RIGHT: 0px\" dir=\"ltr\"><p><em>Область применения: управляемое приложение, мобильное приложение, обычное приложение.</em></p></blockquote>\n<p><a name=\"1.1\" id=\"1.1\"></a>1.1. В программном модуле (общие модули, модули объектов, модули менеджеров объектов, модули форм, команд и т.п.) в общем случае могут присутствовать следующие разделы в приведенной ниже последовательности:</p>\n<ul>\n<li>заголовок модуля \n</li><li>раздел описания переменных \n</li><li>экспортные процедуры и функции модуля, составляющие его программный интерфейс \n</li><li>обработчики событий объекта (формы) \n</li><li>служебные процедуры и функции модуля \n</li><li>раздел инициализации </li></ul>\n<p>Некоторые разделы могут присутствовать только в модулях определенного вида. Например, обработчики событий элементов форм могут присутствовать только в модулях форм, а раздел описания переменных и раздел инициализации не могут быть определены в неглобальных общих модулях, модулях менеджеров объектов, наборов записей, значений констант и модуле сеанса.</p>\n<p>Требование о разделении кода модуля на разделы&nbsp;призвано&nbsp;повысить читаемость&nbsp;кода и упростить внесение изменений в код разными авторами (разработчиками) как при коллективной разработке, так и при доработке прикладных решений на конкретных внедрениях.</p>\n<p><a name=\"1.2\" id=\"1.2\"></a>1.2. Объемные разделы модулей рекомендуется разбивать на подразделы по функциональному признаку.</p>\n<p><a name=\"1.3\" id=\"1.3\"></a>1.3. Разделы и подразделы оформляются в виде областей. При этом имена областей должны удовлетворять требованиям стандарта <a href=\"i8100454.htm\">Правила образования имен переменных</a></p>\n<p><a name=\"1.4\" id=\"1.4\"></a>1.4. Шаблон (заготовка для копирования) разделов для общих модулей:</p>\n<p class=\"Programtext\"><strong>русск.</strong></p><pre class=\"Programtext\">#Область ПрограммныйИнтерфейс\n// Код процедур и функций\n#КонецОбласти\n\n#Область СлужебныйПрограммныйИнтерфейс\n// Код процедур и функций\n#КонецОбласти\n\n#Область СлужебныеПроцедурыИФункции\n// Код процедур и функций\n#КонецОбласти\n</pre>\n<p class=\"Programtext\"><strong>англ.</strong></p><pre class=\"Programtext\">#Region Public\n// Enter code here.\n#EndRegion\n\n#Region Internal\n// Enter code here.\n#EndRegion\n\n#Region Private\n// Enter code here.\n#EndRegion\n</pre>\n<ul>\n<li>Раздел <strong>«Программный интерфейс»</strong> содержит экспортные процедуры и функции, предназначенные для использования другими&nbsp;объектами конфигурации или другими программами (например, через внешнее соединение). \n</li><li>Раздел «<strong>Служебный программный интерфейс</strong>»&nbsp; предназначен для модулей, которые являются частью некоторой функциональной подсистемы. В нем должны быть размещены экспортные процедуры и функции, которые допустимо вызывать только из других функциональных подсистем этой же библиотеки. \n</li><li>Раздел <strong>«Служебные процедуры и функции»</strong> содержит процедуры и функции, составляющие внутреннюю реализацию общего модуля.&nbsp;В тех случаях, когда общий модуль является частью некоторой <a href=\"i8100543.htm\">функциональной подсистемы</a>, включающей в себя несколько объектов метаданных, в этом разделе также могут быть размещены служебные экспортные&nbsp;процедуры и функции, предназначенные&nbsp;только для вызова из других объектов данной подсистемы. <br><br>Для объемных общих модулей рекомендуется разбивать этот раздел на подразделы, по функциональному признаку.&nbsp;Например:&nbsp;</li></ul>\n<p class=\"Programtext\"><strong>русск.</strong></p><pre class=\"Programtext\">#Область ОбновлениеИнформационнойБазы\n// Код процедур и функций\n#КонецОбласти\n</pre>\n<p class=\"Programtext\"><strong>англ.</strong></p><pre class=\"Programtext\">#Region InfobaseUpdate\n// Enter code here.\n#EndRegion\n</pre>\n<p><a name=\"1.5\" id=\"1.5\"></a>1.5. Шаблон оформления разделов для модулей объектов, менеджеров, наборов записей, обработок, отчетов и т.п.:</p>\n<p class=\"Programtext\"><strong>русск.</strong></p><pre class=\"Programtext\">#Область ОписаниеПеременных\n\n#КонецОбласти\n\n#Область ПрограммныйИнтерфейс\n// Код процедур и функций\n#КонецОбласти\n\n#Область ОбработчикиСобытий\n// Код процедур и функций\n#КонецОбласти\n\n#Область СлужебныйПрограммныйИнтерфейс\n// Код процедур и функций\n#КонецОбласти\n\n#Область СлужебныеПроцедурыИФункции\n// Код процедур и функций\n#КонецОбласти\n\n#Область Инициализация\n\n#КонецОбласти</pre>\n<p class=\"Programtext\"><strong>англ.</strong></p><pre class=\"Programtext\">#Region Variables\n\n#EndRegion\n\n#Region Public\n// Enter code here.\n#EndRegion\n\n#Region EventHandlers\n// Enter code here.\n#EndRegion\n\n#Region Internal\n// Enter code here.\n#EndRegion\n\n#Region Private\n// Enter code here.\n#EndRegion\n\n#Region Initialize\n\n#EndRegion\n</pre>\n<ul>\n<li>Раздел <strong>«Программный интерфейс»</strong> содержит экспортные процедуры и функции, предназначенные для использования в других модулях&nbsp;конфигурации или другими программами (например, через внешнее соединение). Не следует в этот раздел помещать экспортные функции и процедуры, которые предназначены для вызова исключительно из модулей самого объекта, его форм и команд. Например, процедуры заполнения табличной части документа, которые вызываются из обработки заполнения в модуле объекта и из формы документа в обработчике команды формы не являются программным интерфейсом модуля объекта, т.к. вызываются только в самом модуле и из форм этого же объекта. Их следует размещать в разделе «Служебные процедуры и функции». \n</li><li>Раздел <strong>«Обработчики событий»</strong> содержит обработчики событий модуля объекта (<strong>ПриЗаписи</strong>, <strong>ПриПроведении</strong> и др.) \n</li><li>Раздел «<strong>Служебный программный интерфейс</strong>» имеет такое же предназначение, как и в общих модулях. \n</li><li>Раздел <strong>«Служебные процедуры и функции»</strong> имеет такое же предназначение, как и в общих модулях.</li></ul>\n<p><a name=\"1.6\" id=\"1.6\"></a>1.6. Шаблон оформления разделов для модулей форм:</p>\n<p class=\"Programtext\"><strong>русск.</strong></p><pre class=\"Programtext\">#Область ОписаниеПеременных\n\n#КонецОбласти\n\n#Область ОбработчикиСобытийФормы\n// Код процедур и функций\n#КонецОбласти\n\n#Область ОбработчикиСобытийЭлементовШапкиФормы\n// Код процедур и функций\n#КонецОбласти\n\n#Область ОбработчикиСобытийЭлементовТаблицыФормы&lt;ИмяТаблицыФормы&gt;\n// Код процедур и функций\n#КонецОбласти\n\n#Область ОбработчикиКомандФормы\n// Код процедур и функций\n#КонецОбласти\n\n#Область СлужебныеПроцедурыИФункции\n// Код процедур и функций\n#КонецОбласти\n</pre>\n<p class=\"Programtext\"><strong>англ.</strong></p><pre class=\"Programtext\">#Region Variables\n\n#EndRegion\n\n#Region FormEventHandlers\n// Enter code here.\n#EndRegion\n\n#Region FormHeaderItemsEventHandlers\n// Enter code here.\n#EndRegion\n\n#Region <tablename>FormTableItemsEventHandlers\n// Enter code here.\n#EndRegion\n\n#Region FormCommandsEventHandlers\n// Enter code here.\n#EndRegion\n\n#Region Private\n// Enter code here.\n#EndRegion\n</tablename></pre>\n<ul>\n<li>Раздел <strong>«Обработчики событий формы»</strong> содержит процедуры-обработчики событий формы: <strong>ПриСозданииНаСервере</strong>, <strong>ПриОткрытии</strong> и т.п. \n</li><li>Раздел <strong>«Обработчики событий элементов шапки формы»</strong> содержит процедуры-обработчики элементов, расположенных в основной части формы (все, что не связано с таблицами на форме). \n</li><li>В разделах <strong>«Обработчики событий элементов таблицы формы &lt;имя таблицы формы&gt;»</strong> размещаются процедуры-обработчики таблиц формы и элементов таблиц. Для процедур-обработчиков каждой таблицы должен быть создан свой раздел. \n</li><li>Раздел <strong>«Обработчики команд формы»</strong> содержит процедуры-обработчики команд формы (имена которых задаются в свойстве Действие команд формы). \n</li><li>Раздел <strong>«Служебные процедуры и функции»</strong> имеет такое же предназначение, что и в общих модулях. </li></ul>\n<blockquote style=\"MARGIN-RIGHT: 0px\" dir=\"ltr\">\n<p><em>См. также: <a href=\"i8100630.htm\">Правила создания модулей форм</a><br></em></p></blockquote>\n<p><a name=\"1.7\" id=\"1.7\"></a>1.7. Шаблон оформления разделов для модулей команд:</p>\n<p class=\"Programtext\"><strong>русск.</strong></p><pre class=\"Programtext\">#Область ОбработчикиСобытий\n// Код процедур и функций\n#КонецОбласти\n\n#Область СлужебныеПроцедурыИФункции\n// Код процедур и функций\n#КонецОбласти\n</pre>\n<p class=\"Programtext\"><strong>англ.</strong></p><pre class=\"Programtext\">#Region EventHandlers\n// Enter code here.\n#EndRegion\n\n#Region Private\n// Enter code here.\n#EndRegion\n</pre>\n<p class=\"Programtext\"><br></p>\n<ul>\n<li>Раздел <strong>«Обработчики событий»</strong> содержит процедуру-обработчик команды <strong>ОбработкаКоманды</strong>. \n</li><li>Раздел <strong>«Служебные процедуры и функции»</strong> имеет такое же предназначение, что и в общих модулях. </li></ul>\n<p><a name=\"1.8\" id=\"1.8\"></a>1.8. В модуле не должно быть пустых областей.</p>\n<p><a name=\"2\" id=\"2\"></a>2. Общие требования к разделам программных модулей.</p>\n<p><a name=\"2.1\" id=\"2.1\"></a>2.1. <strong>Заголовок модуля</strong> представляет собой комментарий в самом начале модуля. В заголовке модуля приводится его краткое описание и условия применения. <br>Например: </p><pre class=\"Programtext\">////////////////////////////////////////////////////////////////////////////////\n// Клиентские процедуры и функции общего назначения:\n// - для работы со списками в формах;\n// - для работы с журналом регистрации;\n// - для обработки действий пользователя в процессе редактирования\n//   многострочного текста, например комментария в документах;\n// - прочее.\n//  \n////////////////////////////////////////////////////////////////////////////////\n</pre>\n<p>Для модулей форм в заголовке рекомендуется размещать описание параметров формы.</p>\n<p><a name=\"2.2\" id=\"2.2\"></a>2.2. <strong>Раздел описания переменных</strong>. Имена переменных назначаются согласно <a href=\"i8100454.htm\">общим правилам образования имен переменных</a>, а их использование описывается в статье <a href=\"i8100639.htm\">Использование глобальных переменных в программных модулях</a>.</p>\n<p>Все переменные модуля должны быть снабжены комментарием, достаточным для понимания их назначения. Комментарий рекомендуется размещать в той же строке, где объявляется переменная. <br>Пример:</p>\n<p class=\"Programtext\"><strong>русск.</strong></p><pre class=\"Programtext\">#Область ОписаниеПеременных\n\nПерем ВалютаУчета;\nПерем АдресПоддержки;\n...\n\n#КонецОбласти\n</pre>\n<p class=\"Programtext\"><strong>англ.</strong></p><pre class=\"Programtext\">#Region Variables\n\nVar PresentationCurrency;\nVar SupportEmail;\n...\n\n#EndRegion\n</pre>\n<p><a name=\"2.3\" id=\"2.3\"></a>2.3. <strong>Программный интерфейс</strong>. Экспортные процедуры и функции, составляющие программный интерфейс модуля, размещаются сразу же после описания переменных. Такие процедуры и функции&nbsp;предназначены для использования другими&nbsp;объектами конфигурации или другими программами (например, через внешнее соединение), поэтому должны быть расположены в модуле на \"видном месте\". </p>\n<blockquote style=\"MARGIN-RIGHT: 0px\" dir=\"ltr\">\n<p><em>См. также: <a href=\"i8100453.htm\">Описание процедур и функций</a></em></p></blockquote>\n<p><a name=\"2.4.1\" id=\"2.4.1\"></a>2.4.1. <strong>Обработчики событий формы, команд и элементов формы</strong>. Перед&nbsp;служебными процедурами и функциями в модуле формы располагаются обработчики событий формы, а также обработчики событий команд и элементов формы. </p>\n<table class=\"tip\">\n<tbody>\n<tr>\n<td>\n<p align=\"right\"><em>Методическая рекомендация (полезный совет)</em></p>\n<p><a name=\"2.4.2\" id=\"2.4.2\"></a>2.4.2. Рекомендуется обработчики одного элемента формы располагать вместе, придерживаясь, при этом, порядка их следования в панели свойств редактора формы в конфигураторе.</p>\n<p><a name=\"2.4.3\" id=\"2.4.3\"></a>2.4.3. У каждого события должна быть назначена своя процедура-обработчик. Если одинаковые действия должны выполняться при возникновении событий в разных элементах формы следует:</p>\n<ul>\n<li>\n<div>создать отдельную процедуру (функцию), выполняющую необходимые действия</div>\n</li><li>\n<div>для каждого элемента формы создать отдельный обработчик с именем, назначаемым по умолчанию</div>\n</li><li>\n<div>из каждого обработчика вызвать требуемую процедуру (функцию).</div></li></ul>\n<p>Например, неправильно:</p><pre class=\"Programtext\">&amp;НаКлиенте\nПроцедура ПоИсполнителюПриИзменении(Элемент)\n ПараметрыОтбора = Новый Соответствие();\n ПараметрыОтбора.Вставить(\"ПоАвтору\", ПоАвтору);\n ПараметрыОтбора.Вставить(\"ПоИсполнителю\", ПоИсполнителю);\n УстановитьОтборСписка(Список, ПараметрыОтбора);\nКонецПроцедуры\n\n&amp;НаКлиенте\nПроцедура ПоАвторуПриИзменении(Элемент)\n ПоИсполнителюПриИзменении(Неопределено);\nКонецПроцедуры\n</pre>\n<p>правильно:</p><pre class=\"Programtext\">&amp;НаКлиенте\nПроцедура ПоИсполнителюПриИзменении(Элемент)\n УстановитьОтбор();\nКонецПроцедуры\n\n&amp;НаКлиенте\nПроцедура ПоАвторуПриИзменении(Элемент)\n УстановитьОтбор();\nКонецПроцедуры\n\n&amp;НаСервере\nПроцедура УстановитьОтбор()\n ПараметрыОтбора = Новый Соответствие();\n ПараметрыОтбора.Вставить(\"ПоАвтору\", ПоАвтору);\n ПараметрыОтбора.Вставить(\"ПоИсполнителю\", ПоИсполнителю);\n УстановитьОтборСписка(Список, ПараметрыОтбора);\nКонецПроцедуры \n</pre>\n<p>Это требование обусловлено тем, что логически процедуры-обработчики событий не предназначены для использования в коде модуля, а вызываются непосредственно платформой. Смешение же этих двух сценариев в одной процедуре неоправданно усложняет ее логику и снижает ее устойчивость (вместо одного предусмотренного сценария вызова&nbsp;- по событию из платформы -&nbsp;код процедуры должен рассчитывать и на другие \"прямые\" вызовы из кода).</p></td></tr></tbody></table>\n<p><a name=\"2.5\" id=\"2.5\"></a>2.5. <strong>Обработчики событий модулей объекта и менеджера объекта </strong>размещаются после раздела с программным интерфейсом, но до служебных процедур и функций модуля.<strong> </strong>&nbsp; \n<table class=\"tip\">\n<tbody>\n<tr>\n<td>\n<p align=\"right\"><em>Методическая рекомендация (полезный совет)</em></p>\n<p><a name=\"2.5.1\" id=\"2.5.1\"></a>2.5.1. Рекомендуется располагать обработчики, придерживаясь порядка их следования в описании встроенного языка.</p></td></tr></tbody></table>\n</p><p><a name=\"2.6\" id=\"2.6\"></a>2.6. <strong>Служебные процедуры и функции модуля</strong>, которые не являются обработчиками событий, а составляют внутреннюю реализацию модуля, размещаются в модуле следом за обработчиками событий. </p>\n<p>В тех случаях когда общий модуль является частью некоторой функциональной подсистемы, включающей в себя несколько объектов метаданных, в этом разделе также могут быть размещены служебные экспортные&nbsp;процедуры и функции, предназначенные&nbsp;только для вызова из других объектов данной подсистемы.</p>\n<p>Процедуры и функции, связанные между собой по характеру или по логике работы рекомендуется располагать вместе. В модулях форм не рекомендуется явно группировать процедуры и функции модуля на серверные, клиентские и функции без контекста, так как такое «технологическое» упорядочивание затрудняет понимание логики модуля, отвлекая внимание разработчика на детали ее реализации. </p>\n<p><a name=\"2.7\" id=\"2.7\"></a>2.7. <strong>Раздел инициализации</strong> содержит операторы, инициализирующие переменные модуля или объект (форму). <br>Например:</p>\n<p class=\"Programtext\"><span style=\"FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; COLOR: navy; LINE-HEIGHT: 115%; mso-fareast-font-family: 'Times New Roman'; mso-ansi-language: RU; mso-fareast-language: RU; mso-bidi-language: AR-SA\"><strong>русск.</strong></span></p><span style=\"FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; COLOR: navy; LINE-HEIGHT: 115%; mso-fareast-font-family: 'Times New Roman'; mso-ansi-language: RU; mso-fareast-language: RU; mso-bidi-language: AR-SA\"><pre class=\"Programtext\">#Область Инициализация\n\nАдресПоддержки = \"v8@1c.ru\"; \nВыполнитьИнициализацию();\n...\n\n#КонецОбласти</pre>\n<p class=\"Programtext\"><strong>англ.</strong></p><pre class=\"Programtext\">#Region Initialize\n\nSupportEmail = \"v8@1c.ru\";\nCtor();\n...\n\n#EndRegion\n</pre>\n<p class=\"Programtext\"><br></p>\n<p class=\"tip\">Для оформления разделов кода в виде областей рекомендуется воспользоваться <a href=\"КонвертацияМодулейДляИспользованияОбластей.epf\">приложенной обработкой</a>.</p></span></body></html>\n\n<HTML><HEAD>\n<META content=\"text/html; charset=utf-8\" http-equiv=Content-Type>\n<META name=GENERATOR content=\"MSHTML 11.00.9600.16428\"></HEAD>\n<BODY><SPAN class=Apple-style-span style=\"WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-COLLAPSE: separate; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium 'Times New Roman'; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px\">\n<P>2.5.6. При разработке конфигураций разделы и подразделы оформляются в виде областей. Правила и примеры оформления разделов и подразделов приведены в статье «Структура модуля» документа \"Система стандартов и методик разработки конфигураций для платформы «1С:Предприятие 8», опубликованном на диске ИТС.</P></SPAN></BODY></HTML>",
"type": "BUG"
}
]
}